[{"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\index.js":"1","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\App.js":"2","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\reportWebVitals.js":"3","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\Home.js":"4","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\Login.js":"5","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\Register.js":"6","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\nav\\Header.js":"7","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\firebase.js":"8","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\reducers\\index.js":"9","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\RegisterComplete.js":"10","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\reducers\\userReducer.js":"11","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\ForgotPassword.js":"12","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\functions\\auth.js":"13","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\user\\History.js":"14","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\routes\\UserRoute.js":"15","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\routes\\LoadingToRedirect.js":"16","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\nav\\UserNav.js":"17","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\user\\Password.js":"18","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\user\\Wishlist.js":"19"},{"size":915,"mtime":1611747469992,"results":"20","hashOfConfig":"21"},{"size":2244,"mtime":1614649206361,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607315181876,"results":"23","hashOfConfig":"21"},{"size":152,"mtime":1609069261152,"results":"24","hashOfConfig":"21"},{"size":4673,"mtime":1614579606946,"results":"25","hashOfConfig":"21"},{"size":1644,"mtime":1614440130661,"results":"26","hashOfConfig":"21"},{"size":1896,"mtime":1614425448815,"results":"27","hashOfConfig":"21"},{"size":582,"mtime":1609085223000,"results":"28","hashOfConfig":"21"},{"size":186,"mtime":1611741546809,"results":"29","hashOfConfig":"21"},{"size":3162,"mtime":1614578906118,"results":"30","hashOfConfig":"21"},{"size":259,"mtime":1611741828224,"results":"31","hashOfConfig":"21"},{"size":1697,"mtime":1614439940821,"results":"32","hashOfConfig":"21"},{"size":504,"mtime":1614578611858,"results":"33","hashOfConfig":"21"},{"size":473,"mtime":1614614522633,"results":"34","hashOfConfig":"21"},{"size":423,"mtime":1614613940965,"results":"35","hashOfConfig":"21"},{"size":712,"mtime":1614614060900,"results":"36","hashOfConfig":"21"},{"size":689,"mtime":1614614638382,"results":"37","hashOfConfig":"21"},{"size":1789,"mtime":1614650806910,"results":"38","hashOfConfig":"21"},{"size":476,"mtime":1614649103790,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"rh2i47",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\index.js",[],["85","86"],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\App.js",["87"],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\reportWebVitals.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\Home.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\Login.js",["88"],"import React, { useEffect, useState } from 'react'\r\nimport { auth, googleAuthProvider } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { Button } from 'antd';\r\nimport { GoogleOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrUpdateUser } from '../../functions/auth'\r\n\r\nconst Login = ({ history }) => {\r\n    const [email, setEmail] = useState('arif.kme16cs012@gmail.com')\r\n    const [password, setPassword] = useState('udemyecommerce')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) {\r\n            history.push('/')\r\n        }\r\n    }, [user])\r\n\r\n    let dispatch = useDispatch()\r\n\r\n    const roleBasedRedirect = (res) => {\r\n        if (res.data.role === 'admin') {\r\n            history.push('/admin/dashboard')\r\n        } else {\r\n            history.push('/user/history')\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        try {\r\n            const result = await auth.signInWithEmailAndPassword(email, password)\r\n            const { user } = result\r\n            const idTokenResult = await user.getIdTokenResult()\r\n\r\n            createOrUpdateUser(idTokenResult.token) //auth check backend function\r\n                .then((res) => {\r\n                    dispatch({\r\n                        type: \"LOGGED_IN_USER\",\r\n                        payload: {\r\n                            name: res.data.name,\r\n                            email: res.data.email,\r\n                            token: idTokenResult.token,\r\n                            role: res.data.role,\r\n                            _id: res.data._id,\r\n                        }\r\n                    })\r\n                    roleBasedRedirect(res)\r\n                })\r\n                .catch(err => console.log(err))\r\n            // history.push('/')            \r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(error.message)\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    const googleLogin = async () => {\r\n        auth.signInWithPopup(googleAuthProvider)\r\n            .then(async (result) => {\r\n                const { user } = result\r\n                const idTokenResult = await user.getIdTokenResult()\r\n                createOrUpdateUser(idTokenResult.token) //auth check backend function\r\n                    .then((res) => {\r\n                        dispatch({\r\n                            type: \"LOGGED_IN_USER\",\r\n                            payload: {\r\n                                name: res.data.name,\r\n                                email: res.data.email,\r\n                                token: idTokenResult.token,\r\n                                role: res.data.role,\r\n                                _id: res.data._id,\r\n                            }\r\n                        })\r\n                        roleBasedRedirect(res)\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                // history.push('/')\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                toast.error(err.message)\r\n            })\r\n    }\r\n\r\n    const loginForm = () =>\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\"><input type=\"email\" className=\"form-control\" placeholder=\"Your email\" value={email} onChange={e => setEmail(e.target.value)} autoFocus /></div>\r\n            <div className=\"form-group\"><input type=\"password\" className=\"form-control\" placeholder=\"Your password\" value={password} onChange={e => setPassword(e.target.value)} /></div>\r\n\r\n            <br />\r\n            <Button onClick={handleSubmit} type='submit' className='mb-3' block shape='round' icon={<MailOutlined />} size=\"large\" disabled={!email || password.length < 6}>Login with Email/Password</Button>\r\n        </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-3\">\r\n                    {loading ? (<h4 className='text-danger'>Loading...</h4>) : (<h4>Login</h4>)}\r\n                    {loginForm()}\r\n                    <Button onClick={googleLogin} type='submit' className='mb-3' block shape='round' icon={<GoogleOutlined />} size=\"large\">Login with Google</Button>\r\n                    <Link to=\"/forgot/password\" className=\"text-danger\">Forgot Password</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\Register.js",["89"],"import React, { useEffect, useState } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) {\r\n            history.push('/')\r\n        }\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const config = {\r\n            url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n            handleCodeInApp: true,\r\n        }\r\n        await auth.sendSignInLinkToEmail(email, config)\r\n        toast.success(`Email is sent to ${email}. Click the link to complete registration`)\r\n        //save user email in local storage\r\n        window.localStorage.setItem('emailForRegistration', email)\r\n        //clear state\r\n        setEmail('')\r\n    }\r\n\r\n    const registerForm = () =>\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"email\" className=\"form-control\" placeholder=\"Your email\" value={email} onChange={e => setEmail(e.target.value)} autoFocus />\r\n            <br />\r\n            <button type=\"submit\" className=\"btn btn-raised text-white bg-secondary\">Register</button>\r\n        </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-3\">\r\n                    <h4>Register</h4>\r\n                    {registerForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\nav\\Header.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\firebase.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\reducers\\index.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\RegisterComplete.js",["90"],"import React, { useEffect, useState } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createOrUpdateUser } from '../../functions/auth'\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    let dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        setEmail(window.localStorage.getItem(\"emailForRegistration\"))\r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        //validation\r\n        if (!email || !password) {\r\n            toast.error('Email and Password is required')\r\n            return\r\n        }\r\n        else if (password.length < 6) {\r\n            toast.error(\"Password must be atleast 6 character long\")\r\n            return\r\n        }\r\n        try {\r\n            const result = await auth.signInWithEmailLink(email, window.location.href)\r\n            if (result.user.emailVerified) {\r\n                //remove user email from local storage\r\n                window.localStorage.removeItem('emailForRegistration')\r\n                //get user id token\r\n                let user = auth.currentUser\r\n                await user.updatePassword(password)\r\n                const idTokenResult = await user.getIdTokenResult()\r\n                //redux store\r\n                console.log('user', user, 'idTokenResult', idTokenResult);\r\n\r\n                createOrUpdateUser(idTokenResult.token) //auth check backend function\r\n                    .then((res) => {\r\n                        dispatch({\r\n                            type: \"LOGGED_IN_USER\",\r\n                            payload: {\r\n                                name: res.data.name,\r\n                                email: res.data.email,\r\n                                token: idTokenResult.token,\r\n                                role: res.data.role,\r\n                                _id: res.data._id,\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(err => console.log(err))\r\n\r\n                //redirect\r\n                history.push('/')\r\n            }\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    const completeRegisterForm = () => <form onSubmit={handleSubmit}>\r\n        <input type=\"email\" className=\"form-control\" value={email} disabled />\r\n        <input type=\"password\" className=\"form-control\" value={password} onChange={e => setPassword(e.target.value)} autoFocus placeholder=\"Enter Password\" />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-raised bg-secondary text-white\">Register</button>\r\n    </form>\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-3\">\r\n                    <h4>Register Complete</h4>\r\n                    {completeRegisterForm()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterComplete\r\n","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\reducers\\userReducer.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\auth\\ForgotPassword.js",["91"],"import React, { useState, useEffect } from 'react'\r\nimport { auth } from '../../firebase'\r\nimport { toast } from 'react-toastify'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [loading, setLoading] = useState('')\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    useEffect(() => {\r\n        if (user && user.token) {\r\n            history.push('/')\r\n        }\r\n    }, [user])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        const config = {\r\n            url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\r\n            handleCodeInApp: true,\r\n        }\r\n        await auth.sendPasswordResetEmail(email, config)\r\n            .then(() => {\r\n                setEmail('')\r\n                setLoading(false)\r\n                toast.success('Check your email for Password reset link')\r\n            }).catch((err) => {\r\n                setLoading(false)\r\n                toast.error(err.message)\r\n                console.log('Error msg in forgotpassword', err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container p-5\">\r\n            {loading ? <h4>Loading...</h4> : <h4>Forgot Password</h4>}\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"email\" className='form-control' value={email} onChange={(e) => setEmail(e.target.value)} placeholder='Your Email' autoFocus />\r\n                <br />\r\n                <button className='btn btn-raised text-white bg-secondary' disabled={!email}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\functions\\auth.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\user\\History.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\routes\\UserRoute.js",["92"],"import React from 'react'\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport LoadingToRedirect from './LoadingToRedirect';\r\n\r\nconst UserRoute = ({ children, ...rest }) => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    return user && user.token ? (<Route {...rest} render={() => children} />) : (<LoadingToRedirect />)\r\n}\r\n\r\nexport default UserRoute\r\n","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\routes\\LoadingToRedirect.js",["93"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoadingToRedirect = () => {\r\n    const [count, setCount] = useState(5)\r\n    let history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount((currentCount) => --currentCount)\r\n        }, 1000)\r\n        //redirect once count is equal to 0\r\n        count === 0 && history.push('/')\r\n        //cleanup\r\n        return () => clearInterval(interval)\r\n    }, [count])\r\n\r\n    return (\r\n        <div className=\"container p-5 text-center\">\r\n            <p>Redirecting you in {count} seconds</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingToRedirect\r\n","D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\components\\nav\\UserNav.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\user\\Password.js",[],"D:\\Full Stack Development\\Udemy\\ecommerce_antd\\client\\src\\pages\\user\\Wishlist.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":50,"column":6,"nodeType":"100","endLine":50,"endColumn":8,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":21,"column":8,"nodeType":"100","endLine":21,"endColumn":14,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"102","line":15,"column":8,"nodeType":"100","endLine":15,"endColumn":14,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":11,"column":13,"nodeType":"107","messageId":"108","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"102","line":16,"column":8,"nodeType":"100","endLine":16,"endColumn":14,"suggestions":"109"},{"ruleId":"105","severity":1,"message":"110","line":2,"column":17,"nodeType":"107","messageId":"108","endLine":2,"endColumn":21},{"ruleId":"98","severity":1,"message":"102","line":16,"column":8,"nodeType":"100","endLine":16,"endColumn":15,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["115"],["116"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["117"],"'Link' is defined but never used.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"121","fix":"123"},{"desc":"121","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [dispatch]",{"range":"127","text":"128"},"Update the dependencies array to be: [history, user]",{"range":"129","text":"130"},{"range":"131","text":"130"},{"range":"132","text":"130"},"Update the dependencies array to be: [count, history]",{"range":"133","text":"134"},[1579,1581],"[dispatch]",[800,806],"[history, user]",[429,435],[484,490],[516,523],"[count, history]"]